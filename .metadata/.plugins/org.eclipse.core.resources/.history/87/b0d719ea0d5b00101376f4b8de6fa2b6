package com.vb;

import java.sql.Date;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ConfigurableApplicationContext;

import com.vb.algo.PasswordAlgo;
import com.vb.model.Department;
import com.vb.model.Employee;
import com.vb.model.Parking;
import com.vb.model.Project;
import com.vb.model.Student;

import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Query;

@SpringBootApplication
public class HibernateSpringBootApplication {

	public static void main(String[] args) {
		ConfigurableApplicationContext context = SpringApplication.run(HibernateSpringBootApplication.class, args);
//		PasswordAlgo algo = context.getBean(PasswordAlgo.class);
//		String rev = algo.encrypt("ThisPass@34");
//		System.out.println(rev);
//
//				String[] beans = context.getBeanDefinitionNames();
//				for(String beanName : beans)
//					System.out.println(beanName);
//				
//				testStudent(context);
//				testProject(context);
//				testParking(context);
				testEmployeeDept(context);
	}
	
	public static void testEmployeeDept(ConfigurableApplicationContext context)
	{
		EntityManagerFactory emf = context.getBean(EntityManagerFactory.class);
		EntityManager em = emf.createEntityManager();
		Employee employee = em.find(Employee.class,1108);
		Department medept = employee.getDepartment();
		System.out.println(employee);
		Department department = em.find(Department.class,1);
		System.out.println();
		System.out.println("working in "+department.getName());
		department.getEmployees().forEach(System.out::println);
		
		em.getTransaction().begin();
		Employee emp = new Employee();
		emp.setDesignation("SE");
		emp.setMgrid(1099);
		emp.setEmpid(1022);
		emp.setName("Dipesh Jangra");
		emp.setDepartment(medept);
		//em.persist(emp);
		em.getTransaction().commit();		
		
		
		
		
		
		
		
		
		
	}
	
	public static void testProject(ConfigurableApplicationContext context)
	{
		EntityManagerFactory emf = context.getBean(EntityManagerFactory.class);
		EntityManager em = emf.createEntityManager();
		em.getTransaction().begin();
		Project p1 = new Project(0,"Indigo", Date.valueOf("2020-05-05"), Date.valueOf("2026-08-07"), 4500000.0);
		Project p2 = new Project(0,"SBI", Date.valueOf("2023-05-05"), Date.valueOf("2025-08-07"), 8500000.0);
		em.persist(p1);
		em.persist(p2);
		em.getTransaction().commit();
		

	}
	public static void testParking(ConfigurableApplicationContext context)
	{
		EntityManagerFactory emf = context.getBean(EntityManagerFactory.class);
		EntityManager em = emf.createEntityManager();
		try
		{
			em.getTransaction().begin();

			Parking p1 =new Parking();p1.setFloor(1); p1.setPlace(12);
			Parking p2 =new Parking();p1.setFloor(1); p1.setPlace(13);

			em.persist(p1);
			em.persist(p2);
		}
		catch(Exception e)
		{
			em.getTransaction().rollback();
		}
		finally
		{
			em.getTransaction().commit();
		}
	}
	public static void testStudent(ConfigurableApplicationContext context)
	{
		// dataSource, entityManagerFactory
		EntityManagerFactory emf = context.getBean(EntityManagerFactory.class);
		EntityManager em = emf.createEntityManager();
		Student student = em.find(Student.class, 112 );

		//		student.setSname("Nishi Sachdeva");
		em.getTransaction().begin(); 
		//		em.remove(student);
		System.out.println(student);
		Integer marks = 81;
		Date dob = Date.valueOf("2001-08-08");
		//		Student s =new Student(112, "Amit Gupta", "CSE", "1212458785",dob, marks);
		//		em.persist(s);

		Query query = em.createQuery("select s from Student s");
		query.getResultList().forEach(System.out::println);
		em.getTransaction().commit();
		em.close();


	}

}